{"version":3,"file":"component---src-pages-index-tsx-97713abfffd826256e5c.js","mappings":"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","sources":["webpack://multi-counter/./src/components/counter.tsx","webpack://multi-counter/./src/styles/components/counter.module.css","webpack://multi-counter/./src/components/counterWithLabel.tsx","webpack://multi-counter/./src/styles/components/counterWithLabel.module.css","webpack://multi-counter/./src/contexts/storeContext.ts","webpack://multi-counter/./src/modules/localStorage.ts","webpack://multi-counter/./src/styles/pages/index.module.css","webpack://multi-counter/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\"\nimport * as styles from \"~/styles/components/counter.module.css\"\n\ntype Props = {\n  value?: number\n  update: (value: number) => void\n}\n\nconst Counter: React.FC<Props> = ({ value = 0, update }) => {\n  const decrement = () => {\n    if (value <= 0) {\n      return\n    }\n    update(value - 1)\n  }\n  const increment = () => {\n    update(value + 1)\n  }\n\n  return (\n    <div className={styles.counter}>\n      <button className={styles.decrementButton} onClick={decrement}></button>\n      <span className={styles.value}>{value}</span>\n      <button className={styles.incrementButton} onClick={increment}></button>\n    </div>\n  )\n}\n\nexport default Counter\n","// extracted by mini-css-extract-plugin\nexport var counter = \"counter-module--counter--2Dv6q\";\nexport var decrementButton = \"counter-module--decrementButton--3KpC6\";\nexport var incrementButton = \"counter-module--incrementButton--d5zmp\";\nexport var value = \"counter-module--value--ygrTP\";","import React, { useEffect, useRef } from \"react\"\nimport type { CounterProps } from \"~/contexts/storeContext\"\nimport * as styles from \"~/styles/components/counterWithLabel.module.css\"\nimport Counter from \"./counter\"\n\ntype Props = {\n  prop: CounterProps\n  shouldFocus: boolean\n  update: (prop: CounterProps) => void\n  remove: () => void\n}\n\nconst CounterWithLabel: React.FC<Props> = ({\n  prop,\n  shouldFocus,\n  update,\n  remove,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null!)\n  useEffect(() => {\n    if (shouldFocus) {\n      inputRef.current.focus()\n    }\n  }, [])\n\n  return (\n    <div className={styles.counterWithLabel}>\n      <input\n        className={styles.label}\n        defaultValue={prop.label}\n        placeholder={\"カウンター名\"}\n        ref={inputRef}\n        onInput={e => {\n          update({ ...prop, label: e.currentTarget.value })\n        }}\n      />\n      <div className={styles.counterRow}>\n        <Counter\n          value={prop.value}\n          update={value => {\n            update({ ...prop, value })\n          }}\n        />\n      </div>\n      <button className={styles.closeButton} onClick={() => remove()}></button>\n    </div>\n  )\n}\n\nexport default CounterWithLabel\n","// extracted by mini-css-extract-plugin\nexport var counterWithLabel = \"counterWithLabel-module--counterWithLabel--39Zi7\";\nexport var label = \"counterWithLabel-module--label--2P_Sz\";\nexport var counterRow = \"counterWithLabel-module--counterRow--2D_g6\";\nexport var closeButton = \"counterWithLabel-module--closeButton--3Koff\";","import { createContext } from \"react\"\n\nexport type Store<T> = {\n  load: () => T | null\n  save: (v: T) => void\n}\n\nexport type CounterProps = {\n  id: number\n  label: string\n  value: number\n}\n\nexport type CounterListStore = Store<CounterProps[]>\n\nexport const CounterListStoreContext = createContext<CounterListStore>({\n  load: () => null,\n  save: () => {},\n})\n","import type { CounterListStore, CounterProps } from \"~/contexts/storeContext\"\n\nconst counterListKey = \"counter-list\"\n\nexport const counterListStore: CounterListStore = {\n  load: () => {\n    if (typeof localStorage === \"undefined\") {\n      return null\n    }\n\n    const counterList = localStorage.getItem(counterListKey)\n    if (!counterList) {\n      return null\n    }\n    return JSON.parse(counterList)\n  },\n  save: (counterList: CounterProps[]) => {\n    if (typeof localStorage === \"undefined\") {\n      return\n    }\n\n    localStorage.setItem(counterListKey, JSON.stringify(counterList))\n  },\n}\n","// extracted by mini-css-extract-plugin\nexport var counterList = \"index-module--counterList--2lrXi\";\nexport var appendButton = \"index-module--appendButton--2Vm-b\";","import type { PageProps } from \"gatsby\"\nimport React, { useEffect, useReducer, useState } from \"react\"\nimport CounterWithLabel from \"~/components/counterWithLabel\"\nimport type { CounterProps } from \"~/contexts/storeContext\"\nimport { CounterListStoreContext } from \"~/contexts/storeContext\"\nimport { counterListStore } from \"~/modules/localStorage\"\nimport * as styles from \"~/styles/pages/index.module.css\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype Action =\n  | {\n      type: \"init\"\n      props: CounterProps[]\n    }\n  | {\n      type: \"append\"\n      prop: CounterProps\n    }\n  | {\n      type: \"update\"\n      index: number\n      prop: CounterProps\n    }\n  | {\n      type: \"remove\"\n      index: number\n    }\n\nconst reducer = (state: CounterProps[], action: Action): CounterProps[] => {\n  let newState: CounterProps[]\n  switch (action.type) {\n    case \"init\":\n      return action.props\n\n    case \"append\":\n      newState = [...state, action.prop]\n      counterListStore.save(newState)\n      return newState\n\n    case \"update\":\n      newState = [...state]\n      newState[action.index] = action.prop\n      counterListStore.save(newState)\n      return newState\n\n    case \"remove\":\n      newState = state.filter((_, i) => i !== action.index)\n      counterListStore.save(newState)\n      return newState\n\n    default:\n      const _: never = action\n      return _\n  }\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [nextId, setNextId] = useState(0)\n  const [lastAppended, setLastAppended] = useState(-1)\n\n  const [counterList, dispatch] = useReducer(reducer, [])\n\n  useEffect(() => {\n    const savedCounterList = counterListStore.load() ?? []\n    const nextId =\n      savedCounterList.length > 0\n        ? savedCounterList[savedCounterList.length - 1].id + 1\n        : 0\n    setNextId(nextId)\n\n    dispatch({ type: \"init\", props: savedCounterList })\n  }, [])\n\n  return (\n    <CounterListStoreContext.Provider value={counterListStore}>\n      <Layout>\n        <Seo />\n        <div className={styles.counterList}>\n          {counterList.map((prop, i) => (\n            <CounterWithLabel\n              prop={prop}\n              shouldFocus={prop.id === lastAppended}\n              update={newProp =>\n                dispatch({ type: \"update\", index: i, prop: newProp })\n              }\n              remove={() => dispatch({ type: \"remove\", index: i })}\n              key={prop.id}\n            />\n          ))}\n          <button\n            className={styles.appendButton}\n            onClick={() => {\n              dispatch({\n                type: \"append\",\n                prop: { id: nextId, label: \"\", value: 0 },\n              })\n              setLastAppended(nextId)\n              setNextId(nextId + 1)\n            }}\n          ></button>\n        </div>\n      </Layout>\n    </CounterListStoreContext.Provider>\n  )\n}\n\nexport default IndexPage\n"],"names":["value","update","className","onClick","prop","shouldFocus","remove","inputRef","useRef","useEffect","current","focus","defaultValue","label","placeholder","ref","onInput","e","currentTarget","CounterListStoreContext","createContext","load","save","counterListKey","counterListStore","localStorage","counterList","getItem","JSON","parse","setItem","stringify","reducer","state","action","newState","type","props","index","filter","_","i","nextId","setNextId","useState","lastAppended","setLastAppended","dispatch","useReducer","savedCounterList","length","id","Provider","map","newProp","key"],"sourceRoot":""}